x export [with and without uart in dmesg]
x changeport [/dev/ttyX]
x erase-flash
x setup
x build
x espinfo
x changeesp [esp chip]
x changebaud [baud]
x clean
x fullclean
x flashmonitor
x monitor
x step-flash-monitor
x menuconfig
x imagesize
x create-project
x rebuildfull
x chipinfo
x esp-install-monitor
x esp-install-logs
x help-esp-tools
x run-esp-cmd [help h -h --help]
x run-esp-cmd [t test]
run-esp-cmd [n nuke]
x run-esp-cmd [i interactive install]
x run-esp-cmd [c cron]
fresh install from nothing

next:
remove unneeded code
add new stuff to error checking
    esp device
parse chipinfo to be pretty
support bashhhh (experimental)

x text export and changeesp
x test help on cmd, help-esp-tools
x test sourced scrips changebaud, changeesp, changeport
x test menuconfig, monitor, flashmonitor, exit-esp-tools
x test / fix / remove esp-idf-tools-cmd.sh options
x reboot immediately when reset is set to 0 mins
x check header on install version lo

x add error handling to changeesp, changeport, and export on esp and port functions

figure out esp32 disable sanity check
    create blank project as master
    add Kconfig.projbuild sample
    add notes to CMakelists.txt
    compiler flags: -zmuldefs
        set_source_files_properties(ieee80211_raw_frame_sanity_check.c
               PROPERTIES COMPILE_FLAGS
                -zmuldefs
        )

    ieee80211_raw_frame_sanity_check.c
    ```
// function to make the esp32 buildin rom function ieee80211_raw_frame_sanity_check always return 0 to kill it
// requires -zmuldefs in compiler flags
extern "C" int ieee80211_raw_frame_sanity_check(int32_t arg, int32_t arg2, int32_t arg3) {
    return 0;
}
    ```
    function: extern "C" int ieee80211_raw_frame_sanity_check(int32_t arg, int32_t arg2, int32_t arg3) { return 0; }

mayhaps support bash?
    # mayhaps it already works mayhaps? test

verbosity levels?
    less verbose on git commands and installers?
    esp_install_logs

possibly upgrade step-flash-monitor with better resets